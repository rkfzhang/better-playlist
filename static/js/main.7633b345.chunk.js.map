{"version":3,"sources":["images/spotify-logo.jpg","Login.js","ApiService.js","Play/InactiveVolume.js","Play/InactivePlayer.js","Play/CurrentSong.js","Play/VolumeController.js","Play/PlayController.js","Collection/CollectionList.js","Collection/PlaylistHeader.js","Collection/Album.js","Collection/Artist.js","Collection/Track.js","Collection/PlaylistMain.js","Search/SearchBar.js","Search/ArtistList.js","Search/TrackList.js","Search/AlbumList.js","Search/SearchList.js","Search/SearchController.js","AppMainController.js","App.js","index.js"],"names":["Login","props","className","Image","src","SpotifyLogo","href","authorizeUrl","Button","variant","authorizeLink","join","reauthorize","error","response","data","message","window","location","apiService","this","authorize","url","urlComponets","substring","split","token","forEach","c","startsWith","searchQuery","setSearchResult","length","axios","method","headers","then","apiSearchResults","tracks","JSON","stringify","items","albums","artists","catch","albumId","songsUris","track","push","uri","console","log","artistId","album","getAlbumTracks","id","deviceId","isPlaying","songQueue","playerShuffle","volume","InactiveVolume","defaultValue","step","disabled","InactivePlayer","Previous","width","height","Play","Next","CurrentSong","currentlyPlayed","name","map","a","getArtists","VolumeController","onChange","e","vol","setVolume","PlayController","useState","setDeviceId","useEffect","playerScript","document","createElement","async","body","appendChild","onSpotifyWebPlaybackSDKReady","player","Spotify","Player","getOAuthToken","cb","addListener","state","setIsPLaying","paused","setCurrentlyPlayed","track_window","current_track","device_id","playerSelectDevice","connect","isPLaying","setPlaying","playerTogglePlayPause","playerStop","playerStart","playerVolume","onClick","playerPrevious","Pause","playerNext","CollectionList","add","setAdd","collection","setCollection","playlistName","setName","ls","get","set","playlistChanged","d","index","data-index","newSelectionIndex","target","dataset","setSelectedPlaylist","setPlaylistChanged","newCollection","playlist","deletePlaylist","Alert","Form","Group","Control","value","newPLaylist","PlaylistHeader","selectedPlaylist","undefined","currentPlaylist","setSongQueue","Album","Artist","artist","genres","Track","PlaylistMain","currentValue","removeTrack","removeAlbum","removeArtist","SearchBar","placeholder","search","setSearchQuery","ArtistList","parse","results","Row","addArtists","images","TrackList","t","addTrack","rounded","addAlbum","roundedCircle","SearchList","Col","AlbumList","SearchController","searchResult","getSearchResults","result","AppMainController","setCurrentPlaylist","getArtistTracks","getCurrentPlaylist","newPlaylist","newTracks","splice","newAlbums","newArtists","App","setToken","retrievedToken","getToken","hash","ReactDOM","render","StrictMode","getElementById"],"mappings":"4PAAe,MAA0B,yCCc1BA,EAVD,SAAAC,GAEV,OACI,sBAAKC,UAAU,QAAf,UACI,cAACC,EAAA,EAAD,CAAOC,IAAKC,IACZ,mBAAGH,UAAU,eAAeI,KAAML,EAAMM,aAAxC,SAAsD,cAACC,EAAA,EAAD,CAAQC,QAAQ,kBAAhB,oC,iCCPlE,SAASC,IAmBL,MAJmB,UAFO,yCAEP,sBAdD,mCAcC,yBAbE,wBAaF,kBAZJ,CACX,8BACA,4BACA,2BACA,gBACA,6BACA,YACA,kBACA,qBAI2GC,KAC3G,OADe,yCAOvB,SAASC,EAAYC,GACwB,6BAAtCA,EAAMC,SAASC,KAAKF,MAAMG,UACzBC,OAAOC,SAASZ,KAAOI,K,IA+MlBS,EAAa,I,oGAxMlB,OAAOT,M,kCAGCG,GACa,6BAAlBA,EAAMG,UACLC,OAAOC,SAASZ,KAAOc,KAAKC,e,+BAI3BC,GACL,IAAMC,EAAeD,EAAIE,UAAU,GAAGC,MAAM,KACxCC,EAAQ,GAIZ,OAHAH,EAAaI,SAAS,SAAAC,GACdA,EAAEC,WAAW,kBAAiBH,EAAQE,EAAEJ,UAAU,QAEnDE,I,uCAGMI,EAAaJ,EAAOK,GAI7BD,EAAYE,OAAS,GACrBC,IAAM,uCAAD,OAAwCH,EAAxC,kBAJW,EAIX,iBAHU,sBAGqF,CAChGI,OAAQ,MACRC,QAAS,CAAC,cAAkB,UAAYT,KAE3CU,MAAK,SAAAC,GACFN,EAAgB,CACZO,OAAQC,KAAKC,UAAUH,EAAiBtB,KAAKuB,OAAOG,OACpDC,OAAQH,KAAKC,UAAUH,EAAiBtB,KAAK2B,OAAOD,OACpDE,QAASJ,KAAKC,UAAUH,EAAiBtB,KAAK4B,QAAQF,YAG7DG,OAAM,SAAU/B,GACbD,EAAYC,GACZkB,EAAgB,CACZO,OAAQ,KACRI,OAAQ,KACRC,QAAS,UAIrBZ,EAAgB,CACZO,OAAQ,KACRI,OAAQ,KACRC,QAAS,S,qCAIFE,EAASnB,EAAOoB,GAC3Bb,IAAM,qCAAD,OAAsCY,EAAtC,WAAwD,CACzDX,OAAQ,MACRC,QAAS,CAAC,cAAkB,UAAYT,KAE3CU,MAAK,SAAAC,GACFA,EAAiBtB,KAAK0B,MAAMd,SAAQ,SAAAoB,GAChCD,EAAUE,KAAKD,EAAME,WAE1BL,OAAM,SAAU/B,GACfqC,QAAQC,IAAItC,GACZD,EAAYC,Q,sCAIJuC,EAAU1B,EAAOoB,GAAY,IAAD,OAIxCb,IAAM,sCAAD,OAAuCmB,EAAvC,kCAHc,eAGd,oBAFW,aAEX,aAAmH,CACpHlB,OAAQ,MACRC,QAAS,CAAC,cAAkB,UAAYT,KAE3CU,MAAK,SAAAC,GACFA,EAAiBtB,KAAK0B,MAAMd,SAAQ,SAAA0B,GAChC,EAAKC,eAAeD,EAAME,GAAI7B,EAAOoB,SAE1CF,OAAM,SAAU/B,GACfqC,QAAQC,IAAItC,GACZD,EAAYC,Q,sCAIJuC,EAAU1B,EAAOgB,GAI7BT,IAAM,sCAAD,OAAuCmB,EAAvC,kCAHc,eAGd,oBAFW,aAEX,aAAmH,CACpHlB,OAAQ,MACRC,QAAS,CAAC,cAAkB,UAAYT,KAE3CU,MAAK,SAAAC,GACFa,QAAQC,IAAId,GACZA,EAAiBtB,KAAK0B,MAAMd,SAAQ,SAAA0B,GAChCX,EAAOM,KAAKK,SAEjBT,OAAM,SAAU/B,GACfqC,QAAQC,IAAItC,GACZD,EAAYC,Q,yCAID2C,EAAU9B,GACzBO,IAAM,uCAAwC,CAC1CC,OAAQ,MACRC,QAAS,CAAC,cAAkB,UAAYT,GACxCX,KAAM,CAAC,WAAgB,CAACyC,MACzBZ,OAAM,SAAU/B,GACfqC,QAAQC,IAAItC,GACZD,EAAYC,Q,4CAIE4C,EAAU/B,GACxB+B,EACAxB,IAAM,6CAA8C,CAChDC,OAAQ,MACRC,QAAS,CAAC,cAAkB,UAAYT,KACzCkB,OAAM,SAAU/B,GACfqC,QAAQC,IAAItC,GACZD,EAAYC,MAIhBoB,IAAM,4CAA6C,CAC/CC,OAAQ,MACRC,QAAS,CAAC,cAAkB,UAAYT,KACzCkB,OAAM,SAAU/B,GACfqC,QAAQC,IAAItC,EAAMC,UAClBF,EAAYC,Q,iCAMba,GACPO,IAAM,6CAA8C,CAChDC,OAAQ,MACRC,QAAS,CAAC,cAAkB,UAAYT,KACzCkB,OAAM,SAAU/B,GACfqC,QAAQC,IAAItC,GACZD,EAAYC,Q,kCAIR6C,EAAWF,EAAU9B,GAAQ,IAAD,OAChCgC,IAAc,IACdzB,IAAM,uDAAD,OAAwDuB,GAAY,CACrEtB,OAAQ,MACRC,QAAS,CAAC,cAAkB,UAAYT,GACxCX,KAAM,CAAC,KAAS2C,KACjBtB,MAAK,WACJ,EAAKuB,cAAcjC,MACpBkB,OAAM,SAAU/B,GACfqC,QAAQC,IAAItC,GACZD,EAAYC,Q,oCAKVa,GACVO,IAAM,0DAA2D,CAC7DC,OAAQ,MACRC,QAAS,CAAC,cAAkB,UAAYT,KACzCkB,OAAM,SAAU/B,GACfqC,QAAQC,IAAItC,GACZD,EAAYC,Q,qCAILa,GACXO,IAAM,gDAAiD,CACnDC,OAAQ,OACRC,QAAS,CAAC,cAAkB,UAAYT,KACzCkB,OAAM,SAAU/B,GACfqC,QAAQC,IAAItC,GACZD,EAAYC,Q,iCAITa,GACPO,IAAM,4CAA6C,CAC/CC,OAAQ,OACRC,QAAS,CAAC,cAAkB,UAAYT,KACzCkB,OAAM,SAAU/B,GACfqC,QAAQC,IAAItC,GACZD,EAAYC,Q,mCAIP+C,EAAQlC,GACjBO,IAAM,8DAAD,OAA+D2B,GAAU,CAC1E1B,OAAQ,MACRC,QAAS,CAAC,cAAkB,UAAYT,KACzCkB,OAAM,SAAU/B,GACfqC,QAAQC,IAAItC,GACZD,EAAYC,U,cCvNTgD,G,MAVQ,WAGnB,OACI,qBAAK3D,UAAU,gBAAf,SACI,cAAC,IAAD,CAAQ4D,aAAa,MAAMC,KAAK,KAAKC,SAAS,c,QCY3CC,EAjBQ,WAInB,OACI,sBAAK/D,UAAU,SAAf,UACI,wBACA,sBAAKA,UAAU,iBAAf,UACI,cAAC,aAAWgE,SAAZ,CAAqBC,MAAO,GAAIC,OAAQ,KACxC,cAAC,aAAWC,KAAZ,CAAiBF,MAAO,GAAIC,OAAQ,KACpC,cAAC,aAAWE,KAAZ,CAAiBH,MAAO,GAAIC,OAAQ,QAExC,cAAC,EAAD,QCKGG,EAnBK,SAAAtE,GAUhB,OAAQA,EAAMuE,gBACV,sBAAKtE,UAAU,cAAf,UACI,4BAAID,EAAMuE,gBAAgBC,OAC1B,4BAXR,WACI,GAAIxE,EAAMuE,gBACN,IAAI7B,EAAU1C,EAAMuE,gBAAgB7B,QAAQ+B,KAAK,SAAAC,GAAC,OAAIA,EAAEF,QAG5D,OAAO9B,EAAQhC,KAAK,MAMZiE,QAEN,yBCAKC,EAbU,SAAA5E,GAMrB,OACI,qBAAKC,UAAU,gBAAf,SACI,cAAC,IAAD,CAAQ4D,aAAa,MAAMC,KAAK,KAAKe,SAAU,SAAAC,GAAC,OANrCC,EAMmDD,OALlE9E,EAAMgF,UAAUD,GADpB,IAAmBA,QCiGRE,EAjGQ,SAAAjF,GAAS,MAMIkF,qBANJ,mBAMrB3B,EANqB,KAMX4B,EANW,KAQ5BC,qBAAU,WACN,IAAMC,EAAeC,SAASC,cAAc,UAC5CF,EAAalF,IAAM,wCACnBkF,EAAaG,OAAQ,EACrBF,SAASG,KAAKC,YAAYL,KAC5B,IAEFrE,OAAO2E,6BAA+B,WAClC,IAAMC,EAAS,IAAI5E,OAAO6E,QAAQC,OAAO,CACrCtB,KAAM,wBACNuB,cAAe,SAAAC,GAAOA,EAAGhG,EAAMyB,UAGnCmE,EAAOK,YAAY,wBAAwB,YAAkB,IAAflF,EAAc,EAAdA,QAAgBkC,QAAQrC,MAAMG,MAC5E6E,EAAOK,YAAY,wBAAwB,YAAkB,IAAflF,EAAc,EAAdA,QAAgBkC,QAAQrC,MAAMG,MAC5E6E,EAAOK,YAAY,iBAAiB,YAAkB,IAAflF,EAAc,EAAdA,QAAgBkC,QAAQrC,MAAMG,MACrE6E,EAAOK,YAAY,kBAAkB,YAAkB,IAAflF,EAAc,EAAdA,QAAgBkC,QAAQrC,MAAMG,MAGtE6E,EAAOK,YAAY,wBAAwB,SAAAC,GACvCjD,QAAQC,IAAIgD,GACE,OAAVA,IACAC,GAAcD,EAAME,QACpBC,EAAmBH,EAAMI,aAAaC,mBAK9CX,EAAOK,YAAY,SAAS,YAAoB,IAAjBO,EAAgB,EAAhBA,UAC3BvD,QAAQC,IAAI,uBAAwBsD,GACpCtF,EAAWuF,mBAAmBD,EAAUxG,EAAMyB,OAC9C0D,EAAYqB,MAIhBZ,EAAOK,YAAY,aAAa,YAAoB,IAAjBO,EAAgB,EAAhBA,UAC/BvD,QAAQC,IAAI,6BAA8BsD,MAI9CZ,EAAOc,WAhDiB,MAsDMxB,oBAAS,GAtDf,mBAsDrByB,EAtDqB,KAsDVR,EAtDU,OAuDkBjB,mBAAS,IAvD3B,mBAuDrBX,EAvDqB,KAuDJ8B,EAvDI,OAwDAnB,mBAAS,KAxDT,mBAwDrBvB,EAxDqB,KAwDbqB,EAxDa,KA0D5B,SAAS4B,IACL1F,EAAW2F,sBAAsBF,EAAU3G,EAAMyB,OAsBrD,OAXA2D,qBAAU,WACFpF,EAAMyD,YAAc,KACpBvC,EAAW4F,WAAW9G,EAAMyB,OAC5BP,EAAW6F,YAAY/G,EAAMyD,UAAUF,EAASvD,EAAMyB,UAE3D,CAACzB,EAAMyD,UAAWF,EAAUvD,EAAMyB,QAErC2D,qBAAU,WACNlE,EAAW8F,aAAarD,EAAQ3D,EAAMyB,SACvC,CAACkC,EAAQ3D,EAAMyB,QAGd,sBAAKxB,UAAU,SAAf,UACI,cAAC,EAAD,CAAasE,gBAAiBA,IAC9B,sBAAKtE,UAAU,iBAAf,UACI,cAAC,aAAWgE,SAAZ,CAAqBC,MAAO,GAAIC,OAAQ,GAAI8C,QAAS,WAtB7D/F,EAAWgG,eAAelH,EAAMyB,UAuBvBkF,EACG,cAAC,aAAWQ,MAAZ,CAAkBjD,MAAO,GAAIC,OAAQ,GAAI8C,QAAS,kBAAML,OACxD,cAAC,aAAWxC,KAAZ,CAAiBF,MAAO,GAAIC,OAAQ,GAAI8C,QAAS,kBAAML,OAE3D,cAAC,aAAWvC,KAAZ,CAAiBH,MAAO,GAAIC,OAAQ,GAAI8C,QAAS,WAvBzD/F,EAAWkG,WAAWpH,EAAMyB,aAyBxB,cAAC,EAAD,CAAkBuD,UAAWA,Q,iDCH1BqC,EAzFQ,SAAArH,GAAU,IAAD,EAENkF,oBAAS,GAFH,mBAErBoC,EAFqB,KAEhBC,EAFgB,OAGQrC,mBAAS,IAHjB,mBAGrBsC,EAHqB,KAGTC,EAHS,OAIIvC,mBAAS,IAJb,mBAIrBwC,EAJqB,KAIPC,EAJO,KAsD5B,OAhDAvC,qBAAU,WACHwC,IAAGC,IAAI,eACNJ,EAAcG,IAAGC,IAAI,iBAE3B,IAEFzC,qBAAU,WACNwC,IAAGE,IAAI,aAAcN,KACvB,CAACxH,EAAM+H,gBAAiBP,IAyCtB,sBAAKvH,UAAU,qBAAf,UACI,iDACA,oBAAIA,UAAU,eACd,8BACKuH,EAAW/C,KAAK,SAACuD,GAAD,OACb,gCACI,cAAC,IAAD,CAAoB1E,GAAI0E,EAAExD,KAAK,IAAIwD,EAAEC,MAArC,SACI,mBAAGC,aAAYF,EAAEC,MAAOhB,QAAS,SAAAnC,GAAC,OA7BlCqD,EA6BqDrD,EAAEsD,OAAOC,QAAQJ,MA5B1FjI,EAAMsI,oBAAoBd,EAAWW,SACrCnI,EAAMuI,oBAAmB,GAF7B,IAAwBJ,GA6BA,SAA+EH,EAAExD,SAGrF,cAAC,IAAD,CAAalB,GAAI0E,EAAExD,KAAK,IAAIwD,EAAEC,MAA9B,SACI,cAAC,IAAD,CAAUhB,QAAS,kBA5B3C,SAAwBgB,GACpB,IAAIO,EAAgB,GACpBhB,EAAW9F,SAAQ,SAAA+G,GACXA,EAASR,QAAUA,IACfQ,EAASR,MAAQA,IACjBQ,EAASR,OAAS,GAEtBO,EAAczF,KAAK0F,OAI3BhB,EAAce,GACdZ,IAAGE,IAAI,aAAcU,GAgBwBE,CAAeV,EAAEC,QAA1C,wBANED,EAAEC,YAanBX,EACG,eAACqB,EAAA,EAAD,WACI,cAACC,EAAA,EAAKC,MAAN,UACI,cAACD,EAAA,EAAKE,QAAN,CAAcC,MAAOrB,EAAc7C,SAAU,SAAAC,GAAC,OAAI6C,EAAQ7C,EAAEsD,OAAOW,YAEvE,sBAAK9I,UAAU,oBAAf,UACI,cAACM,EAAA,EAAD,CAAQ0G,QA/D5B,WACI,GAAIS,EAAc,CACd,IAAIsB,EAAc,CACdxE,KAAMkD,EACNO,MAAOT,EAAWzF,OAClBS,MAAO,CACHH,OAAQ,GACRI,OAAQ,GACRC,QAAS,KAGjB+E,EAAc,GAAD,mBAAKD,GAAL,CAAiBwB,KAC9BzB,GAAO,GACPI,EAAQ,MAkDI,iBACA,cAACpH,EAAA,EAAD,CAAQ0G,QAAS,WAAOM,GAAQD,GAAMK,EAAQ,KAA9C,0BAEG,GAEf,cAACpH,EAAA,EAAD,CAAQ0G,QAAS,WAAOM,GAAQD,IAAhC,8BCtEG2B,EAjBQ,SAAAjJ,GAQnB,OACI,sBAAKC,UAAU,kBAAf,UACI,6BAAKD,EAAMkJ,iBAAiB1E,OAC5B,cAACjE,EAAA,EAAD,CAAQ0G,QAAS,kBAAWjH,EAAMkJ,2BARRC,IAA1BnJ,EAAMoJ,iBACNpJ,EAAMqJ,aAAarJ,EAAMoJ,mBAO4B5I,QAAQ,UAA7D,kBACA,4BAAG,mGCIA8I,EAjBD,SAAAtJ,GASV,OACI,sBAAKC,UAAU,iBAAf,UACI,8BAAMD,EAAMoD,MAAMoB,OAClB,8BATQxE,EAAMoD,MAAMV,QAAQ+B,KAAK,SAAAC,GAAC,OAAIA,EAAEF,QAE/B9D,KAAK,YCUX6I,EAdA,SAAAvJ,GAMX,OACI,sBAAKC,UAAU,kBAAf,UACI,8BAAMD,EAAMwJ,OAAOhF,OACnB,8BANGxE,EAAMwJ,OAAOC,OAASzJ,EAAMwJ,OAAOC,OAAO,GAAK,SCc/CC,EAlBD,SAAA1J,GASV,OACI,sBAAKC,UAAU,iBAAf,UACI,8BAAMD,EAAM8C,MAAM0B,OAClB,8BARUxE,EAAM8C,MAAMJ,QAAQ+B,KAAK,SAAAC,GAAC,OAAIA,EAAEF,QAE/B9D,KAAK,QAOhB,8BAAMV,EAAM8C,MAAMM,MAAMoB,WCmDrBmF,EA5DM,SAAA3J,GAEjB,OACI,sBAAKC,UAAU,gBAAf,UACKD,EAAMkJ,iBAAiB1G,MAAMH,OAAON,OAAS,uCAAiB,GAC9D/B,EAAMkJ,iBAAiB1G,MAAMH,OAAOoC,KACjC,SAACmF,EAAc3B,GAAf,OACA,gCACI,eAAC,IAAD,CAAoB3E,GAAIsG,EAAapF,KAAO,IAAMyD,EAAlD,UACI,cAAC,EAAD,CAAOnF,MAAO8G,IACd,oBAAI3J,UAAU,kBAGlB,cAAC,IAAD,CAAaqD,GAAIsG,EAAapF,KAAO,IAAMyD,EAA3C,SACI,cAAC,IAAD,CAAUhB,QAAS,kBAAMjH,EAAM6J,YAAY5B,IAA3C,wBAPE2B,EAAapF,KAAO,IAAMyD,MAavCjI,EAAMkJ,iBAAiB1G,MAAMC,OAAOV,OAAS,wCAAkB,GAC/D/B,EAAMkJ,iBAAiB1G,MAAMC,OAAOgC,KACjC,SAACmF,EAAc3B,GAAf,OACA,gCACI,eAAC,IAAD,CAAoB3E,GAAIsG,EAAapF,KAAO,IAAMyD,EAAlD,UACI,cAAC,EAAD,CAAO7E,MAAOwG,IACd,oBAAI3J,UAAU,kBAGlB,cAAC,IAAD,CAAaqD,GAAIsG,EAAapF,KAAO,IAAMyD,EAA3C,SACI,cAAC,IAAD,CAAUhB,QAAS,kBAAMjH,EAAM8J,YAAY7B,IAA3C,wBAPE2B,EAAapF,KAAO,IAAMyD,MAavCjI,EAAMkJ,iBAAiB1G,MAAME,QAAQX,OAAS,yCAAmB,GACjE/B,EAAMkJ,iBAAiB1G,MAAME,QAAQ+B,KAClC,SAACmF,EAAc3B,GAAf,OACA,gCACI,eAAC,IAAD,CAAoB3E,GAAIsG,EAAapF,KAAO,IAAMyD,EAAlD,UACI,cAAC,EAAD,CAAQuB,OAAQI,EAAcnI,MAAOzB,EAAMyB,QAC3C,oBAAIxB,UAAU,kBAGlB,cAAC,IAAD,CAAaqD,GAAIsG,EAAapF,KAAO,IAAMyD,EAA3C,SACI,cAAC,IAAD,CAAUhB,QAAS,kBAAMjH,EAAM+J,aAAa9B,IAA5C,wBAPE2B,EAAapF,KAAO,IAAMyD,MAcrCjI,EAAMkJ,iBAAiB1G,MAAMH,OAAON,OAAS/B,EAAMkJ,iBAAiB1G,MAAMC,OAAOV,OAAS/B,EAAMkJ,iBAAiB1G,MAAME,QAAQX,OAC/H,IAAM,6DC9CNiI,EAXG,SAAAhK,GAEd,OACI,qBAAKC,UAAU,aAAf,SACI,cAAC2I,EAAA,EAAKC,MAAN,UACI,cAACD,EAAA,EAAKE,QAAN,CAAcmB,YAAY,SAASlB,MAAO/I,EAAMkK,OAAQrF,SAAU,SAAAC,GAAC,OAAI9E,EAAMmK,eAAerF,EAAEsD,OAAOW,e,gBCuBtGqB,EA5BI,SAAApK,GAEf,IAAI0C,EAAUJ,KAAK+H,MAAMrK,EAAMsK,SAW/B,OAAO5H,EAAQX,OACV,gCACG,yCACKW,EAAQ+B,KAAK,SAACC,GAAD,OACd,cAAC6F,EAAA,EAAD,UACI,sBAAKtK,UAAU,mBAAmBgH,QAAS,SAAAnC,GAAC,OAd5D,SAAoB0E,GAChB,IAAIf,EAAWzI,EAAMkJ,iBACrBT,EAASjG,MAAME,QAAf,sBAA6B+F,EAASjG,MAAME,SAA5C,CAAqD8G,IAErDxJ,EAAMsI,oBAAoBG,GAC1BzI,EAAMmK,eAAe,IACrBnK,EAAMuI,oBAAmB,GAQmCiC,CAAW9F,IAA3D,UACKA,EAAE+F,OAAO1I,OAAS,cAAC7B,EAAA,EAAD,CAAOD,UAAU,eAAeE,IAAKuE,EAAE+F,OAAO/F,EAAE+F,OAAO1I,OAAO,GAAGV,MAAU,GAC9F,qBAAKpB,UAAU,cAAf,SACI,6BAAKyE,EAAEF,aAJTE,EAAEpB,UAQV,ICIHoH,EA7BG,SAAA1K,GAEd,IAAIqC,EAASC,KAAK+H,MAAMrK,EAAMsK,SAW9B,OAAOjI,EAAON,OACT,gCACG,wCACKM,EAAOoC,KAAK,SAACkG,GAAD,OACb,cAACJ,EAAA,EAAD,UACI,sBAAKtK,UAAU,mBAAmBgH,QAAS,SAAAnC,GAAC,OAd5D,SAAkBhC,GACd,IAAI2F,EAAWzI,EAAMkJ,iBACrBT,EAASjG,MAAMH,OAAf,sBAA4BoG,EAASjG,MAAMH,QAA3C,CAAmDS,IAEnD9C,EAAMsI,oBAAoBG,GAC1BzI,EAAMmK,eAAe,IACrBnK,EAAMuI,oBAAmB,GAQmCqC,CAASD,IAAzD,UACKA,EAAEvH,MAAMqH,OAAO1I,OAAS,cAAC7B,EAAA,EAAD,CAAOC,IAAKwK,EAAEvH,MAAMqH,OAAOE,EAAEvH,MAAMqH,OAAO1I,OAAO,GAAGV,IAAKwJ,SAAO,IAAM,GAC/F,sBAAK5K,UAAU,cAAf,UACI,6BAAK0K,EAAEnG,OACP,4BAAImG,EAAEjI,QAAQ,GAAG8B,cALnBmG,EAAErH,UASV,ICGH8G,EA7BI,SAAApK,GAEf,IAAIyC,EAASH,KAAK+H,MAAMrK,EAAMsK,SAW9B,OAAO7H,EAAOV,OACT,gCACG,wCACKU,EAAOgC,KAAK,SAACC,GAAD,OACb,cAAC6F,EAAA,EAAD,UACI,sBAAKtK,UAAU,mBAAmBgH,QAAS,SAAAnC,GAAC,OAd5D,SAAkB1B,GACd,IAAIqF,EAAWzI,EAAMkJ,iBACrBT,EAASjG,MAAMC,OAAf,sBAA4BgG,EAASjG,MAAMC,QAA3C,CAAmDW,IAEnDpD,EAAMsI,oBAAoBG,GAC1BzI,EAAMmK,eAAe,IACrBnK,EAAMuI,oBAAmB,GAQmCuC,CAASpG,IAAzD,UACKA,EAAE+F,OAAO1I,OAAQ,cAAC7B,EAAA,EAAD,CAAOC,IAAKuE,EAAE+F,OAAO,GAAGpJ,IAAM0J,eAAa,IAAK,GAClE,sBAAK9K,UAAU,cAAf,UACI,6BAAKyE,EAAEF,OACP,4BAAIE,EAAEhC,QAAQ,GAAG8B,cALnBE,EAAEpB,UASV,ICFH0H,EArBI,SAAAhL,GAEf,OACIA,EAAMsK,QAAQjI,OAAON,OAAS/B,EAAMsK,QAAQ5H,QAAQX,OAAS/B,EAAMsK,QAAQ7H,OAAOV,OAClF,sBAAK9B,UAAU,iBAAf,UACI,cAACgL,EAAA,EAAD,UACI,cAAC,EAAD,CAAWX,QAAStK,EAAMsK,QAAQjI,OAAQ6G,iBAAkBlJ,EAAMkJ,iBAAkBX,mBAAoBvI,EAAMuI,mBAC1GD,oBAAqBtI,EAAMsI,oBAAqB6B,eAAgBnK,EAAMmK,mBAE9E,cAACc,EAAA,EAAD,UACI,cAAC,EAAD,CAAYX,QAAStK,EAAMsK,QAAQ5H,QAASwG,iBAAkBlJ,EAAMkJ,iBAAkBX,mBAAoBvI,EAAMuI,mBAC5GD,oBAAqBtI,EAAMsI,oBAAqB6B,eAAgBnK,EAAMmK,mBAE9E,cAACc,EAAA,EAAD,UACI,cAACC,EAAD,CAAWZ,QAAStK,EAAMsK,QAAQ7H,OAAQyG,iBAAkBlJ,EAAMkJ,iBAAkBX,mBAAoBvI,EAAMuI,mBAC1GD,oBAAqBtI,EAAMsI,oBAAqB6B,eAAgBnK,EAAMmK,sBAEzE,ICYFgB,EA9BU,SAAAnL,GAAS,MAIOkF,mBAAS,IAJhB,mBAIxBrD,EAJwB,KAIXsI,EAJW,OAKSjF,mBAAS,CAAE7C,OAAQ,GAAII,OAAQ,GAAIC,QAAS,KALrD,mBAKxB0I,EALwB,KAKVtJ,EALU,KAkB9B,OAVAsD,qBAAU,WAKNtD,OAHIZ,EAAWmK,iBAAiBxJ,EAAY7B,EAAMyB,MAAMK,MAIzD,CAACD,EAAa7B,EAAMyB,QAKnB,sBAAKxB,UAAU,iBAAf,UACI,cAAC,EAAD,CAAWiK,OAAQrI,EAAayJ,OAAQF,EAAcjB,eAAgBA,IACpEiB,EACE,cAAC,EAAD,CAAYd,QAASc,EAAclC,iBAAkBlJ,EAAMkJ,iBAC3DZ,oBAAqBtI,EAAMsI,oBAAqB6B,eAAgBA,EAAgB5B,mBAAoBvI,EAAMuI,qBACxG,OCqEHgD,EA1FW,SAAAvL,GAAS,MAKiBkF,qBALjB,mBAKxBgE,EALwB,KAKNZ,EALM,OAMepD,oBAAS,GANxB,mBAMxB6C,EANwB,KAMPQ,EANO,OAOerD,qBAPf,mBAOxBkE,EAPwB,KAOPoC,EAPO,KAoE/B,OA3DApG,qBAAU,WAiBNmD,GAAmB,GAhBnB,WACI,GAAIW,EAAiB,CACjB,IAAIrG,EAAY,GAChBqG,EAAiB1G,MAAMH,OAAOX,SAAQ,SAAAoB,GAClCD,EAAUE,KAAKD,EAAME,QAEzBkG,EAAiB1G,MAAMC,OAAOf,SAAQ,SAAA0B,GAClClC,EAAWmC,eAAeD,EAAME,GAAItD,EAAMyB,MAAOoB,MAErDqG,EAAiB1G,MAAME,QAAQhB,SAAQ,SAAA8H,GACnCtI,EAAWuK,gBAAgBjC,EAAOlG,GAAItD,EAAMyB,MAAOoB,MAEvD2I,EAAmB3I,IAK3B6I,KACD,CAAC3D,EAAiB/H,EAAMyB,MAAOyH,IAyC9B,sBAAKjJ,UAAU,WAAf,UACI,cAAC,EAAD,CAAgBqI,oBAAqBA,EAAqBP,gBAAiBA,EAAiBQ,mBAAoBA,IAChH,qBAAKtI,UAAU,mBAAf,cAxCyBkJ,IAArBD,GAAkCA,EA0C9B,gCACI,cAAC,EAAD,CAAgBA,iBAAkBA,EAAkBG,aAAcrJ,EAAMqJ,aAAc5H,MAAOzB,EAAMyB,MAAO2H,gBAAiBA,IAC3H,cAAC,EAAD,CAAkBF,iBAAkBA,EAAkBZ,oBAAqBA,EAAqB7G,MAAOzB,EAAMyB,MACzG8G,mBAAoBA,IACxB,cAAC,EAAD,CAAcW,iBAAkBA,EAAkBW,YArCtE,SAAqB5B,GACjB,IAAI0D,EAAczC,EACd0C,EAAYD,EAAYnJ,MAAMH,OAClCuJ,EAAUC,OAAO5D,EAAM,GACvB0D,EAAYnJ,MAAMH,OAASuJ,EAC3BtD,EAAoBqD,GACpBpD,GAAmB,IA+ByEuB,YA5BhG,SAAqB7B,GACjB,IAAI0D,EAAczC,EACd4C,EAAYH,EAAYnJ,MAAMC,OAClCqJ,EAAUD,OAAO5D,EAAM,GACvB0D,EAAYnJ,MAAMC,OAASqJ,EAC3BxD,EAAoBqD,GACpBpD,GAAmB,IAsBmGwB,aAnB1H,SAAsB9B,GAClB,IAAI0D,EAAczC,EACd6C,EAAaJ,EAAYnJ,MAAME,QACnCqJ,EAAWF,OAAO5D,EAAM,GACxB0D,EAAYnJ,MAAME,QAAUqJ,EAC5BzD,EAAoBqD,GACpBpD,GAAmB,IAcC9G,MAAOzB,EAAMyB,WAGrB,8BACI,oBAAIxB,UAAU,gBAAd,0CCnDT+L,MA/Bf,WAAe,MAIe9G,mBAAS,IAJxB,mBAIJzD,EAJI,KAIGwK,EAJH,KAMX7G,qBAAU,WACN,IAAM8G,EAAiBhL,EAAWiL,SAASnL,OAAOC,SAASmL,MAC3DH,EAASC,KACV,IATQ,MAauBhH,mBAAS,IAbhC,mBAaJzB,EAbI,KAaO4F,EAbP,KAiBX,OACI,sBAAKpJ,UAAU,MAAf,UACKwB,EACG,cAAC,EAAD,CAAmBA,MAAOA,EAAO4H,aAAcA,IAC7C,cAAC,EAAD,CAAO/I,aAAcY,EAAWE,cAErCK,EACG,cAAC,EAAD,CAAgBA,MAAOA,EAAOgC,UAAWA,IACvC,cAAC,EAAD,Q,MC1BlB4I,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjH,SAASkH,eAAe,W","file":"static/js/main.7633b345.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spotify-logo.522b5e00.jpg\";","import React from 'react';\r\nimport { Image , Button } from 'react-bootstrap';\r\nimport SpotifyLogo from './images/spotify-logo.jpg'\r\n\r\nconst Login = props => {\r\n\r\n    return (\r\n        <div className='login'>\r\n            <Image src={SpotifyLogo} />\r\n            <a className='login-button' href={props.authorizeUrl}><Button variant='outline-success'>Login to Spotify</Button></a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import axios from 'axios';\r\n\r\nfunction authorizeLink() {\r\n    const client_id = '012ed053ecba4a58874cb8a2e753225a';\r\n    const redirect_uri = 'http://sbplaylist.me/';\r\n    const scopes = [\r\n        \"user-read-currently-playing\",\r\n        \"user-read-recently-played\",\r\n        \"user-read-playback-state\",\r\n        \"user-top-read\",\r\n        \"user-modify-playback-state\",\r\n        \"streaming\", \r\n        \"user-read-email\", \r\n        \"user-read-private\"\r\n    ];\r\n    const authorizeEndpoint = 'https://accounts.spotify.com/authorize';\r\n\r\n    const authorizeLink = `${authorizeEndpoint}?client_id=${client_id}&redirect_uri=${redirect_uri}&scope=${scopes.join(\r\n        \"%20\"\r\n      )}&response_type=token&show_dialog=true`;\r\n\r\n    return authorizeLink\r\n}\r\n\r\nfunction reauthorize(error) {\r\n    if(error.response.data.error.message === \"The access token expired\") {\r\n        window.location.href = authorizeLink();\r\n    }\r\n}\r\n\r\nclass ApiService {\r\n\r\n    authorize() {\r\n        return authorizeLink();\r\n    }\r\n\r\n    reauthorize(error) {\r\n        if(error.message === \"The access token expired\") {\r\n            window.location.href = this.authorize();\r\n        }\r\n    }\r\n\r\n    getToken(url) {\r\n        const urlComponets = url.substring(1).split(\"&\");\r\n        let token = '';\r\n        urlComponets.forEach( c => {\r\n            if (c.startsWith('access_token')) token = c.substring(13);\r\n        });\r\n        return token;\r\n    }\r\n\r\n    getSearchResults(searchQuery, token, setSearchResult) {\r\n        const resultLimit = 5;\r\n        const resultType = 'artist,album,track';\r\n\r\n        if (searchQuery.length > 2) {\r\n            axios(`https://api.spotify.com/v1/search?q=${searchQuery}&limit=${resultLimit}&type=${resultType}`, {\r\n                method: 'GET',\r\n                headers: {'Authorization' : 'Bearer ' + token}\r\n            })\r\n            .then(apiSearchResults => {\r\n                setSearchResult({\r\n                    tracks: JSON.stringify(apiSearchResults.data.tracks.items),\r\n                    albums: JSON.stringify(apiSearchResults.data.albums.items),\r\n                    artists: JSON.stringify(apiSearchResults.data.artists.items)\r\n                });\r\n            })\r\n            .catch(function (error) {\r\n                reauthorize(error);\r\n                setSearchResult({\r\n                    tracks: \"[]\",\r\n                    albums: \"[]\",\r\n                    artists: \"[]\"\r\n                });\r\n            });\r\n        }\r\n        setSearchResult({\r\n            tracks: \"[]\",\r\n            albums: \"[]\",\r\n            artists: \"[]\"\r\n        });\r\n    }\r\n\r\n    getAlbumTracks(albumId, token, songsUris) {\r\n        axios(`https://api.spotify.com/v1/albums/${albumId}/tracks`, {\r\n            method: 'GET',\r\n            headers: {'Authorization' : 'Bearer ' + token}\r\n        })\r\n        .then(apiSearchResults => {\r\n            apiSearchResults.data.items.forEach(track => {\r\n                songsUris.push(track.uri);\r\n            })\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n            reauthorize(error);\r\n        });\r\n    }\r\n\r\n    getArtistTracks(artistId, token, songsUris) {\r\n        const resultType = 'album,single';\r\n        const country = 'from_token';\r\n\r\n        axios(`https://api.spotify.com/v1/artists/${artistId}/albums?include_groups=${resultType}&country=${country}&limit=50`, {\r\n            method: 'GET',\r\n            headers: {'Authorization' : 'Bearer ' + token}\r\n        })\r\n        .then(apiSearchResults => {\r\n            apiSearchResults.data.items.forEach(album => {\r\n                this.getAlbumTracks(album.id, token, songsUris);\r\n            })\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n            reauthorize(error);\r\n        });\r\n    }\r\n\r\n    getArtistAlbums(artistId, token, albums) {\r\n        const resultType = 'album,single';\r\n        const country = 'from_token';\r\n\r\n        axios(`https://api.spotify.com/v1/artists/${artistId}/albums?include_groups=${resultType}&country=${country}&limit=50`, {\r\n            method: 'GET',\r\n            headers: {'Authorization' : 'Bearer ' + token}\r\n        })\r\n        .then(apiSearchResults => {\r\n            console.log(apiSearchResults);\r\n            apiSearchResults.data.items.forEach(album => {\r\n                albums.push(album);\r\n            });\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n            reauthorize(error);\r\n        });\r\n    }\r\n\r\n    playerSelectDevice(deviceId, token) {\r\n        axios(`https://api.spotify.com/v1/me/player`, {\r\n            method: 'PUT',\r\n            headers: {'Authorization' : 'Bearer ' + token},\r\n            data: {'device_ids' :  [deviceId] }\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n            reauthorize(error);\r\n        });\r\n    }\r\n\r\n    playerTogglePlayPause(isPlaying,token) {\r\n        if (isPlaying) {\r\n            axios(`https://api.spotify.com/v1/me/player/pause`, {\r\n                method: 'PUT',\r\n                headers: {'Authorization' : 'Bearer ' + token}\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n                reauthorize(error);\r\n            });\r\n        }\r\n        else {\r\n            axios(`https://api.spotify.com/v1/me/player/play`, {\r\n                method: 'PUT',\r\n                headers: {'Authorization' : 'Bearer ' + token}\r\n            }).catch(function (error) {\r\n                console.log(error.response);\r\n                reauthorize(error);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    playerStop(token) {\r\n        axios(`https://api.spotify.com/v1/me/player/pause`, {\r\n            method: 'PUT',\r\n            headers: {'Authorization' : 'Bearer ' + token}\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n            reauthorize(error);\r\n        });\r\n    }\r\n\r\n    playerStart(songQueue, deviceId, token) {\r\n        if (songQueue !== []) {\r\n            axios(`https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`, {\r\n                method: 'PUT',\r\n                headers: {'Authorization' : 'Bearer ' + token},\r\n                data: {'uris' : songQueue}\r\n            }).then(() => {\r\n                this.playerShuffle(token);\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n                reauthorize(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    playerShuffle(token) {\r\n        axios(`https://api.spotify.com/v1/me/player/shuffle?state=true`, {\r\n            method: 'PUT',\r\n            headers: {'Authorization' : 'Bearer ' + token},\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n            reauthorize(error);\r\n        });\r\n    }\r\n\r\n    playerPrevious(token) {\r\n        axios(`https://api.spotify.com/v1/me/player/previous`, {\r\n            method: 'POST',\r\n            headers: {'Authorization' : 'Bearer ' + token},\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n            reauthorize(error);\r\n        });\r\n    }\r\n\r\n    playerNext(token) {\r\n        axios(`https://api.spotify.com/v1/me/player/next`, {\r\n            method: 'POST',\r\n            headers: {'Authorization' : 'Bearer ' + token},\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n            reauthorize(error);\r\n        });\r\n    }\r\n\r\n    playerVolume(volume, token) {\r\n        axios(`https://api.spotify.com/v1/me/player/volume?volume_percent=${volume}`, {\r\n            method: 'PUT',\r\n            headers: {'Authorization' : 'Bearer ' + token},\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n            reauthorize(error);\r\n        });\r\n    }\r\n}\r\nexport const apiService = new ApiService();","import React from 'react';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\n\r\nconst InactiveVolume = () => {\r\n\r\n\r\n    return (\r\n        <div className='player-volume'>\r\n            <Slider defaultValue='100' step='10' disabled='false'/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InactiveVolume;","import React from 'react';\r\nimport InactiveVolume from './InactiveVolume';\r\nimport { PlayerIcon } from 'react-player-controls'\r\n\r\nconst InactivePlayer = () => {\r\n\r\n\r\n\r\n    return (\r\n        <div className='player'>\r\n            <div></div>\r\n            <div className='player-buttons'>\r\n                <PlayerIcon.Previous width={32} height={32}/>\r\n                <PlayerIcon.Play width={32} height={32}/>\r\n                <PlayerIcon.Next width={32} height={32}/>\r\n            </div>\r\n            <InactiveVolume />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InactivePlayer;","import React from 'react';\r\n\r\nconst CurrentSong = props => {\r\n\r\n    function getArtists() {\r\n        if (props.currentlyPlayed) {\r\n            var artists = props.currentlyPlayed.artists.map( a => a.name);\r\n        }\r\n\r\n        return artists.join(', ');\r\n    }\r\n\r\n    return (props.currentlyPlayed ?\r\n        <div className='search-name'>\r\n            <p>{props.currentlyPlayed.name}</p>\r\n            <p>{getArtists()}</p>\r\n        </div>\r\n        : <div></div>\r\n    );\r\n}\r\n\r\nexport default CurrentSong;","import React from 'react';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\n\r\nconst VolumeController = props => {\r\n    \r\n    function setVolume(vol) {\r\n        props.setVolume(vol);\r\n    }\r\n\r\n    return (\r\n        <div className='player-volume'>\r\n            <Slider defaultValue='100' step='10' onChange={e => setVolume(e)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VolumeController;","import React, { useEffect, useState } from 'react';\r\nimport { apiService } from '../ApiService'\r\nimport CurrentSong from './CurrentSong';\r\nimport VolumeController from './VolumeController';\r\nimport { PlayerIcon } from 'react-player-controls'\r\n\r\nconst PlayController = props => {\r\n\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////\r\n    //PLAYER SETUP\r\n\r\n    const [deviceId, setDeviceId] = useState(); \r\n\r\n    useEffect(() => {\r\n        const playerScript = document.createElement(\"script\");\r\n        playerScript.src = \"https://sdk.scdn.co/spotify-player.js\";\r\n        playerScript.async = true;\r\n        document.body.appendChild(playerScript);\r\n    },[]);\r\n\r\n    window.onSpotifyWebPlaybackSDKReady = () => {\r\n        const player = new window.Spotify.Player({\r\n            name: \"BetterPlaylist Player\",\r\n            getOAuthToken: cb => {cb(props.token)}\r\n        });\r\n\r\n        player.addListener('initialization_error', ({ message }) => { console.error(message); });\r\n        player.addListener('authentication_error', ({ message }) => { console.error(message); });\r\n        player.addListener('account_error', ({ message }) => { console.error(message); });\r\n        player.addListener('playback_error', ({ message }) => { console.error(message); });\r\n\r\n        // Playback status updates\r\n        player.addListener('player_state_changed', state => {\r\n            console.log(state);\r\n            if (state !== null) {\r\n                setIsPLaying(!state.paused);\r\n                setCurrentlyPlayed(state.track_window.current_track);\r\n            }\r\n         });\r\n\r\n        // Ready\r\n        player.addListener('ready', ({ device_id }) => {\r\n            console.log('Ready with Device ID', device_id);\r\n            apiService.playerSelectDevice(device_id,props.token);\r\n            setDeviceId(device_id);\r\n        });\r\n\r\n        // Not Ready\r\n        player.addListener('not_ready', ({ device_id }) => {\r\n            console.log('Device ID has gone offline', device_id);\r\n        });\r\n\r\n        // Connect to the player!\r\n        player.connect();\r\n\r\n    };\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////\r\n    //PLAYER CONTROLS\r\n    const [isPLaying, setIsPLaying] = useState(false);\r\n    const [currentlyPlayed, setCurrentlyPlayed] = useState('');\r\n    const [volume, setVolume] = useState(100);\r\n\r\n    function setPlaying() {\r\n        apiService.playerTogglePlayPause(isPLaying,props.token);\r\n    };\r\n\r\n    function previous() {\r\n        apiService.playerPrevious(props.token);\r\n    }\r\n\r\n    function next() {\r\n        apiService.playerNext(props.token);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.songQueue !== []) {\r\n            apiService.playerStop(props.token);\r\n            apiService.playerStart(props.songQueue,deviceId,props.token);\r\n        }\r\n    }, [props.songQueue, deviceId, props.token]);\r\n\r\n    useEffect(() => {\r\n        apiService.playerVolume(volume, props.token);\r\n    }, [volume, props.token]);\r\n\r\n    return (\r\n        <div className='player'>\r\n            <CurrentSong currentlyPlayed={currentlyPlayed} />\r\n            <div className='player-buttons'>\r\n                <PlayerIcon.Previous width={32} height={32} onClick={() => previous()}/>\r\n                {isPLaying ? \r\n                    <PlayerIcon.Pause width={32} height={32} onClick={() => setPlaying()}/> : \r\n                    <PlayerIcon.Play width={32} height={32} onClick={() => setPlaying()}/>\r\n                }\r\n                <PlayerIcon.Next width={32} height={32} onClick={() => next()}/>\r\n            </div>\r\n            <VolumeController setVolume={setVolume}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayController;","import React, { useEffect, useState } from 'react';\r\nimport { Button, Alert } from 'react-bootstrap';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\r\nimport ls from 'local-storage'\r\n\r\nconst CollectionList = props => {\r\n\r\n    const [add, setAdd] = useState(false);\r\n    const [collection, setCollection] = useState([]);\r\n    const [playlistName, setName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if(ls.get('collection')) {\r\n            setCollection(ls.get('collection'));\r\n        }\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        ls.set('collection', collection);\r\n    },[props.playlistChanged, collection]);\r\n    \r\n    function addNewPlaylist() {\r\n        if (playlistName) {\r\n            let newPLaylist = {\r\n                name: playlistName,\r\n                index: collection.length,\r\n                items: {\r\n                    tracks: [],\r\n                    albums: [],\r\n                    artists: [],\r\n                }\r\n            };\r\n            setCollection([...collection, newPLaylist]);\r\n            setAdd(false);\r\n            setName(\"\");\r\n        }\r\n    }\r\n\r\n    function changePlaylist(newSelectionIndex) {\r\n        props.setSelectedPlaylist(collection[newSelectionIndex]);\r\n        props.setPlaylistChanged(true);\r\n    }\r\n\r\n    function deletePlaylist(index) {\r\n        var newCollection = [];\r\n        collection.forEach(playlist => {\r\n            if (playlist.index !== index) {\r\n                if (playlist.index > index) {\r\n                    playlist.index -= 1;\r\n                }\r\n                newCollection.push(playlist);\r\n            }\r\n        });\r\n\r\n        setCollection(newCollection);\r\n        ls.set('collection', newCollection);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='collection-section'>\r\n            <h2>Your Collection</h2>\r\n            <hr className='line-break'/>\r\n            <div>\r\n                {collection.map( (d) => \r\n                    <div key={d.index}>\r\n                        <ContextMenuTrigger id={d.name+'-'+d.index}>\r\n                            <p data-index={d.index} onClick={e => changePlaylist(e.target.dataset.index)}>{d.name}</p>\r\n                        </ContextMenuTrigger>\r\n\r\n                        <ContextMenu id={d.name+'-'+d.index}>\r\n                            <MenuItem onClick={() => deletePlaylist(d.index)}>\r\n                                Remove\r\n                            </MenuItem>\r\n                        </ContextMenu>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {add ? \r\n                <Alert>\r\n                    <Form.Group>\r\n                        <Form.Control value={playlistName} onChange={e => setName(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <div className='collection-button'>\r\n                        <Button onClick={addNewPlaylist}>Add</Button>\r\n                        <Button onClick={() => {setAdd(!add); setName('');}}>Cancel</Button>\r\n                    </div>\r\n                </Alert> : \"\"\r\n            }\r\n            <Button onClick={() => {setAdd(!add)}}>Add Playlist</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CollectionList;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst PlaylistHeader = props => {\r\n\r\n    function play() {\r\n        if (props.currentPlaylist !== undefined){\r\n            props.setSongQueue(props.currentPlaylist);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='playlist-header'>\r\n            <h1>{props.selectedPlaylist.name}</h1>\r\n            <Button onClick={() => play(props.selectedPlaylist)} variant=\"success\" >Play</Button>\r\n            <p><small>Please wait ~30s before hitting play to compile playlist</small></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlaylistHeader;","import React from 'react';\r\n\r\nconst Album = props => {\r\n\r\n    function getArtists() {\r\n        var album = props.album.artists.map( a => a.name);\r\n\r\n        return album.join(', ');\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='playlist-album'>\r\n            <div>{props.album.name}</div>\r\n            <div>{getArtists()}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Album;","\r\nimport React from 'react';\r\n\r\nconst Artist = props => {\r\n\r\n    function getGenres() {\r\n        return props.artist.genres ? props.artist.genres[0] : \"\";\r\n    }\r\n\r\n    return (\r\n        <div className='playlist-artist'>\r\n            <div>{props.artist.name}</div>\r\n            <div>{getGenres()}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Artist;","import React from 'react';\r\n\r\nconst Track = props => {\r\n    \r\n\r\n    function getArtists() {\r\n        var artists = props.track.artists.map( a => a.name);\r\n\r\n        return artists.join(', ');\r\n    }\r\n\r\n    return (\r\n        <div className='playlist-track'>\r\n            <div>{props.track.name}</div>\r\n            <div>{getArtists()}</div>\r\n            <div>{props.track.album.name}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Track;","import React from 'react';\r\nimport Album from './Album';\r\nimport Artist from './Artist';\r\nimport Track from './Track';\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\r\n\r\nconst PlaylistMain = props => {\r\n\r\n    return (\r\n        <div className='playlist-main'>\r\n            {props.selectedPlaylist.items.tracks.length ? <h3>Songs</h3> : \"\"}\r\n            {props.selectedPlaylist.items.tracks.map(\r\n                (currentValue, index) => \r\n                <div key={currentValue.name + '-' + index}>\r\n                    <ContextMenuTrigger id={currentValue.name + '-' + index}>\r\n                        <Track track={currentValue}/>\r\n                        <hr className='line-break' />\r\n                    </ContextMenuTrigger>\r\n\r\n                    <ContextMenu id={currentValue.name + '-' + index}>\r\n                        <MenuItem onClick={() => props.removeTrack(index)}>\r\n                            Remove\r\n                        </MenuItem>\r\n                    </ContextMenu>\r\n                </div>\r\n            )}\r\n            {props.selectedPlaylist.items.albums.length ? <h3>Albums</h3> : \"\"}\r\n            {props.selectedPlaylist.items.albums.map(\r\n                (currentValue, index) => \r\n                <div key={currentValue.name + '-' + index}>\r\n                    <ContextMenuTrigger id={currentValue.name + '-' + index}>\r\n                        <Album album={currentValue}/>\r\n                        <hr className='line-break' />\r\n                    </ContextMenuTrigger>\r\n\r\n                    <ContextMenu id={currentValue.name + '-' + index}>\r\n                        <MenuItem onClick={() => props.removeAlbum(index)}>\r\n                            Remove\r\n                        </MenuItem>\r\n                    </ContextMenu>\r\n                </div>\r\n            )}\r\n            {props.selectedPlaylist.items.artists.length ? <h3>Artists</h3> : \"\"}\r\n            {props.selectedPlaylist.items.artists.map(\r\n                (currentValue, index) => \r\n                <div key={currentValue.name + '-' + index}>\r\n                    <ContextMenuTrigger id={currentValue.name + '-' + index}>\r\n                        <Artist artist={currentValue} token={props.token}/>\r\n                        <hr className='line-break' />\r\n                    </ContextMenuTrigger>\r\n\r\n                    <ContextMenu id={currentValue.name + '-' + index}>\r\n                        <MenuItem onClick={() => props.removeArtist(index)}>\r\n                            Remove\r\n                        </MenuItem>\r\n                    </ContextMenu>\r\n                </div>\r\n            )}\r\n            {\r\n               props.selectedPlaylist.items.tracks.length + props.selectedPlaylist.items.albums.length + props.selectedPlaylist.items.artists.length ?\r\n               \" \" : <h3>There's nothing in here</h3> \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlaylistMain;","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst SearchBar = props => {\r\n\r\n    return (\r\n        <div className='search-bar'>\r\n            <Form.Group>\r\n                <Form.Control placeholder=\"Search\" value={props.search} onChange={e => props.setSearchQuery(e.target.value)}/>\r\n            </Form.Group>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport {Image, Row } from 'react-bootstrap';\r\n\r\nconst ArtistList = props => {\r\n \r\n    var artists = JSON.parse(props.results);\r\n\r\n    function addArtists(artist) {\r\n        let playlist = props.selectedPlaylist;\r\n        playlist.items.artists = [...playlist.items.artists, artist];\r\n        \r\n        props.setSelectedPlaylist(playlist);\r\n        props.setSearchQuery('');\r\n        props.setPlaylistChanged(true);\r\n    }\r\n\r\n    return artists.length ?\r\n        (<div>\r\n            <h2>Artists</h2>\r\n                {artists.map( (a) => \r\n                <Row key={a.id}>\r\n                    <div className='search-container' onClick={e => addArtists(a)}>\r\n                        {a.images.length ? <Image className='artist-image' src={a.images[a.images.length-1].url} /> : \"\" }\r\n                        <div className='search-name'> \r\n                            <h3>{a.name}</h3>\r\n                        </div>\r\n                    </div>\r\n                </Row>)}\r\n        </div>) : \"\";\r\n}\r\n\r\nexport default ArtistList;\r\n//onclick","import React from 'react';\r\nimport {Image, Row } from 'react-bootstrap';\r\n\r\nconst TrackList = props => {\r\n \r\n    var tracks = JSON.parse(props.results);\r\n\r\n    function addTrack(track) {\r\n        let playlist = props.selectedPlaylist;\r\n        playlist.items.tracks = [...playlist.items.tracks, track];\r\n        \r\n        props.setSelectedPlaylist(playlist);\r\n        props.setSearchQuery('');\r\n        props.setPlaylistChanged(true);\r\n    }\r\n\r\n    return tracks.length ?\r\n        (<div>\r\n            <h2>Tracks</h2>\r\n                {tracks.map( (t) => \r\n                <Row key={t.id}>\r\n                    <div className='search-container' onClick={e => addTrack(t)}>\r\n                        {t.album.images.length ? <Image src={t.album.images[t.album.images.length-1].url} rounded /> : \"\"}\r\n                        <div className='search-name'> \r\n                            <h3>{t.name}</h3>\r\n                            <p>{t.artists[0].name}</p>\r\n                        </div>\r\n                    </div>\r\n                </Row>)}\r\n        </div>) : \"\";\r\n}\r\n\r\nexport default TrackList;\r\n//onclick","import React from 'react';\r\nimport { Image, Row } from 'react-bootstrap';\r\n\r\nconst ArtistList = props => {\r\n \r\n    var albums = JSON.parse(props.results);\r\n\r\n    function addAlbum(album) {\r\n        let playlist = props.selectedPlaylist;\r\n        playlist.items.albums = [...playlist.items.albums, album];\r\n        \r\n        props.setSelectedPlaylist(playlist);\r\n        props.setSearchQuery('');\r\n        props.setPlaylistChanged(true);\r\n    }\r\n\r\n    return albums.length ?\r\n        (<div>\r\n            <h2>Albums</h2>\r\n                {albums.map( (a) => \r\n                <Row key={a.id}>\r\n                    <div className='search-container' onClick={e => addAlbum(a)}>\r\n                        {a.images.length ?<Image src={a.images[2].url}  roundedCircle/> : \"\"}\r\n                        <div className='search-name'> \r\n                            <h3>{a.name}</h3>\r\n                            <p>{a.artists[0].name}</p>\r\n                        </div>\r\n                    </div>\r\n                </Row>)}\r\n        </div>) : \"\";\r\n}\r\n\r\nexport default ArtistList;\r\n//onclick","import React from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport ArtistList from './ArtistList';\r\nimport TrackList from './TrackList';\r\nimport AlbumList from './AlbumList';\r\n\r\nconst SearchList = props => {\r\n\r\n    return (\r\n        props.results.tracks.length + props.results.artists.length + props.results.albums.length ? \r\n        <div className='search-results'>\r\n            <Col>\r\n                <TrackList results={props.results.tracks} selectedPlaylist={props.selectedPlaylist} setPlaylistChanged={props.setPlaylistChanged}\r\n                    setSelectedPlaylist={props.setSelectedPlaylist} setSearchQuery={props.setSearchQuery} />\r\n            </Col>\r\n            <Col>\r\n                <ArtistList results={props.results.artists} selectedPlaylist={props.selectedPlaylist} setPlaylistChanged={props.setPlaylistChanged}\r\n                    setSelectedPlaylist={props.setSelectedPlaylist} setSearchQuery={props.setSearchQuery} />\r\n            </Col>\r\n            <Col>\r\n                <AlbumList results={props.results.albums} selectedPlaylist={props.selectedPlaylist} setPlaylistChanged={props.setPlaylistChanged}\r\n                    setSelectedPlaylist={props.setSelectedPlaylist} setSearchQuery={props.setSearchQuery} />\r\n            </Col>\r\n        </div> : \"\"\r\n    );\r\n}\r\n\r\nexport default SearchList;","import React, { useState, useEffect } from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport SearchList from './SearchList';\r\nimport { apiService } from '../ApiService'\r\n\r\nconst SearchController = props => {\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////\r\n    //SEARCH\r\n    const[searchQuery, setSearchQuery] = useState('');\r\n    const[searchResult, setSearchResult] = useState({ tracks: [], albums: [], artists: [] });\r\n\r\n    \r\n    useEffect(() => {\r\n        const getSearchResults = () => {\r\n            apiService.getSearchResults(searchQuery,props.token,setSearchResult);\r\n        };\r\n\r\n        setSearchResult(getSearchResults());\r\n    }, [searchQuery, props.token]);\r\n\r\n\r\n\r\n    return (\r\n        <div className='search-section'>\r\n            <SearchBar search={searchQuery} result={searchResult} setSearchQuery={setSearchQuery}/>\r\n            { searchResult ? \r\n                <SearchList results={searchResult} selectedPlaylist={props.selectedPlaylist} \r\n                setSelectedPlaylist={props.setSelectedPlaylist} setSearchQuery={setSearchQuery} setPlaylistChanged={props.setPlaylistChanged}/>\r\n                : \"\"\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchController;","import React, { useState, useEffect } from 'react';\r\nimport CollectionList from './Collection/CollectionList';\r\nimport PlaylistHeader from './Collection/PlaylistHeader';\r\nimport PlaylistMain from './Collection/PlaylistMain';\r\nimport SearchController from './Search/SearchController';\r\nimport { apiService } from './ApiService'\r\n\r\n\r\nconst AppMainController = props => {\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////\r\n    //PLAYLIST\r\n\r\n    const [selectedPlaylist, setSelectedPlaylist] = useState();\r\n    const [playlistChanged, setPlaylistChanged] = useState(false);\r\n    const [currentPlaylist, setCurrentPlaylist] = useState();\r\n\r\n    useEffect(() => {\r\n        function getCurrentPlaylist() {\r\n            if (selectedPlaylist){\r\n                var songsUris = [];\r\n                selectedPlaylist.items.tracks.forEach(track => {\r\n                    songsUris.push(track.uri);\r\n                });\r\n                selectedPlaylist.items.albums.forEach(album => {\r\n                    apiService.getAlbumTracks(album.id, props.token, songsUris);\r\n                });\r\n                selectedPlaylist.items.artists.forEach(artist => {\r\n                    apiService.getArtistTracks(artist.id, props.token, songsUris);\r\n                });\r\n                setCurrentPlaylist(songsUris);\r\n            }\r\n        }\r\n\r\n        setPlaylistChanged(false);\r\n        getCurrentPlaylist();\r\n    }, [playlistChanged, props.token, selectedPlaylist]);\r\n    \r\n    function playlistChosen() {\r\n        return (selectedPlaylist !== undefined || selectedPlaylist);\r\n    }\r\n\r\n    \r\n\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////\r\n    //DELETE\r\n\r\n    function removeTrack(index) {\r\n        var newPlaylist = selectedPlaylist;\r\n        var newTracks = newPlaylist.items.tracks;\r\n        newTracks.splice(index,1);\r\n        newPlaylist.items.tracks = newTracks;\r\n        setSelectedPlaylist(newPlaylist);\r\n        setPlaylistChanged(true);\r\n    }\r\n\r\n    function removeAlbum(index) {\r\n        var newPlaylist = selectedPlaylist;\r\n        var newAlbums = newPlaylist.items.albums;\r\n        newAlbums.splice(index,1);\r\n        newPlaylist.items.albums = newAlbums;\r\n        setSelectedPlaylist(newPlaylist);\r\n        setPlaylistChanged(true);\r\n    }\r\n\r\n    function removeArtist(index) {\r\n        var newPlaylist = selectedPlaylist;\r\n        var newArtists = newPlaylist.items.artists;\r\n        newArtists.splice(index,1);\r\n        newPlaylist.items.artists = newArtists;\r\n        setSelectedPlaylist(newPlaylist);\r\n        setPlaylistChanged(true);\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='App-Main'>\r\n            <CollectionList setSelectedPlaylist={setSelectedPlaylist} playlistChanged={playlistChanged} setPlaylistChanged={setPlaylistChanged}/>\r\n            <div className='playlist-section'>\r\n                {playlistChosen() ?\r\n                    <div>\r\n                        <PlaylistHeader selectedPlaylist={selectedPlaylist} setSongQueue={props.setSongQueue} token={props.token} currentPlaylist={currentPlaylist}/>\r\n                        <SearchController selectedPlaylist={selectedPlaylist} setSelectedPlaylist={setSelectedPlaylist} token={props.token} \r\n                            setPlaylistChanged={setPlaylistChanged}/>\r\n                        <PlaylistMain selectedPlaylist={selectedPlaylist} removeTrack={removeTrack} removeAlbum={removeAlbum} removeArtist={removeArtist} \r\n                            token={props.token} />\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <h2 className='playlist-none'>No playlist selected</h2>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppMainController;","import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Login from './Login';\r\nimport { apiService } from './ApiService'\r\nimport InactivePlayer from './Play/InactivePlayer';\r\nimport PlayController from './Play/PlayController';\r\nimport AppMainController from './AppMainController';\r\n\r\nfunction App() {\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////\r\n    //CREDENTIAS\r\n    const [token, setToken] = useState('');\r\n\r\n    useEffect(() => {\r\n        const retrievedToken = apiService.getToken(window.location.hash);\r\n        setToken(retrievedToken);\r\n    }, []);\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////\r\n    //QUEUE\r\n    const [songQueue, setSongQueue] = useState([]);\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////\r\n    //PAGE\r\n    return ( \r\n        <div className=\"App\">\r\n            {token ?\r\n                <AppMainController token={token} setSongQueue={setSongQueue}/>\r\n                : <Login authorizeUrl={apiService.authorize()}/>\r\n            }\r\n            {token ? \r\n                <PlayController token={token} songQueue={songQueue} /> \r\n                : <InactivePlayer />\r\n            }\r\n        </div>  \r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}